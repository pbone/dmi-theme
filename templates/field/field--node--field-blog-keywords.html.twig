{#
/**
 * @file
 * Theme override for a field.
 *
 * To override output, copy the "field.html.twig" from the templates directory
 * to your theme's directory and customize it, just like customizing other
 * Drupal templates such as page.html.twig or node.html.twig.
 *
 * Instead of overriding the theming for all fields, you can also just override
 * theming for a subset of fields using
 * @link themeable Theme hook suggestions. @endlink For example,
 * here are some theme hook suggestions that can be used for a field_foo field
 * on an article node type:
 * - field--node--field-foo--article.html.twig
 * - field--node--field-foo.html.twig
 * - field--node--article.html.twig
 * - field--field-foo.html.twig
 * - field--text-with-summary.html.twig
 * - field.html.twig
 *
 * Available variables:
 * - attributes: HTML attributes for the containing element.
 * - label_hidden: Whether to show the field label or not.
 * - title_attributes: HTML attributes for the title.
 * - label: The label for the field.
 * - content_attributes: HTML attributes for the content.
 * - items: List of all the field items. Each item contains:
 *   - attributes: List of HTML attributes for each item.
 *   - content: The field item's content.
 * - entity_type: The entity type to which the field belongs.
 * - field_name: The name of the field.
 * - field_type: The type of the field.
 * - label_display: The display settings for the label.
 *
 * @see template_preprocess_field()
 */
#}

{# First step: capture the rendered output of the internal path link for a term #}
{% set tid %}{{ content.field_category.0['#url'] }}{% endset %}

{# Second step: do some string processing on the captured output, removing the /taxonomy/term/ prefix and getting the TID #}
{{ tid|trim|replace({ '/taxonomy/term/' : '' }) }}

{% set field_name_class = field_name|clean_class %}
{%
  set classes = [
    'field',
    'field-' ~ entity_type|clean_class ~ '--' ~ field_name_class,
    'field-name-' ~ field_name_class,
    'field-type-' ~ field_type|clean_class,
    'field-label-' ~ label_display,
    label_display == 'inline' ? 'clearfix',
  ]
%}
{%
  set title_classes = [
    'field-label',
    label_display == 'visually_hidden' ? 'visually-hidden',
  ]
%}

  <div class="zurb-foundation-callout callout blog" {{ attributes.addClass(classes) }}>
  {% if not label_hidden %}
    <h4{{ title_attributes.addClass(title_classes) }}>{{ label }}</h4>
  {% endif %}
  <ul{{ content_attributes.addClass('blog-tags') }}>
    {% for item in items %}
        {# First step: capture the rendered output of the internal path link for a term #}
        {% set tid %}{{ item.content['#url'] }}{% endset %}
        {#{ kint(item) }#}
        {# Second step: do some string processing on the captured output, removing the /taxonomy/term/ prefix and getting the TID #}
      <li{{ item.attributes.addClass('blog-tags--item') }}><a href="{{ tid|trim|replace({ '/taxonomy/term/' :'/blog/tag/' }) }}" rel="nofollow">{{ item.content['#title'] }}</a></li>

    {% endfor %}
  </ul>
</div>
