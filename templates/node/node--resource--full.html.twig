{#
/**
 * @file
 * Default theme implementation to display a node.
 *
 * Available variables:
 * - node: Full node entity.
 *   - id: The node ID.
 *   - bundle: The type of the node, for example, "page" or "article".
 *   - authorid: The user ID of the node author.
 *   - createdtime: Time the node was published formatted in Unix timestamp.
 *   - changedtime: Time the node was changed formatted in Unix timestamp.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 *
 * @ingroup themeable
 */
#}
{% set form_display_class = content.field_resource_file.0.form_id ? 'medium-5' %}
<header class="m-feature m-feature--h3">
  <div class="row">
    <div class="columns small-12">

      <div class="m-feature-bg">
        {% if content.field_resource_type[0] %}
          <span>{{ get_taxonomy_icon(content.field_resource_type[0]['#taxonomy_term'].get('field_icon').value[0]['target_id']) }}</span>
        {% endif %}
      </div>

      <div class="m-feature-content">
        <p class="m-feature-category"><a href="/learn-overview" alt="Learn Overview">{{ 'Learn'|trans }}</a></p>
        <h1 class="m-feature-title">{{ node.title.value|trans }}</h1>
      </div>
    </div>
  </div>
</header>

<section class="m-section m-section--bg-light-blue m-section--padding-top-medium m-section--padding-bottom-medium l-form">
  <article id="node-{{ node.id }}" {{ attributes.addClass('resource') }}>

    {{ title_prefix }}
    {{ title_suffix }}

    <div{{ content_attributes.addClass('row') }}>

      <div class="columns medium-7">
        <div class="m-box-icon">
          <span>{{ get_svg('i-form-arrow') }}</span>
        </div>
        <div class="m-box m-box--event">
          <div class="m-box-inner">
            {#<h1 {{ title_attributes.addClass('m-box-title') }}>{{ label }}</h1>#}
            <div class="u-text-size--large">
              {{ content.field_resource_copy }}
            </div>
          </div>
        </div>
      </div>

      <div class="columns small-12 medium-5 align-top {#{{ form_display_class }}#}">
        <div class="align-center">
          {% if (content.field_resource_file or content.field_resource_link) %}
            {% if submitted %}
              <div class="submission-message">{{ submission_message }}</div>
              {# Make call out to Google analytics to track this submission (event tracking - Assigned to Al #}
              <script>

              </script>

            {% endif %}
            {{ content.field_resource_file }}
            {{ content.field_resource_link }}
            {% if submitted %}
              <div class="additional-info">{{ additional_info }}</div>
            {% endif %}
          {% endif %}
        </div>
      </div>

    </div>

  </article>
</section>
{{ content|without('field_resource_copy', 'field_resource_file', 'field_resource_link', 'field_resource_type') }}
