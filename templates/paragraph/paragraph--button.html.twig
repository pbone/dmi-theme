{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{% block paragraph %}
    {% block content %}

        {% set buttonURL = content.field_cta_link[0]['#url'] %}
        {% set buttonTitle = content.field_cta_link[0]['#title'] %}
        {% set buttonStyle = content.field_button_style %}
        {% set buttonPosition = content.field_button_position | default('center') %}

        {% if buttonURL %}

            {% if buttonStyle == 'theme_4' %}
                <div class="m-link content-position-{{ buttonPosition }}">
                    <a class="m-link-text" href="{{ buttonURL }}" target="{{ content.link_target }}">
                        {{ buttonTitle }}
                        <span>
                          {{ get_svg('i-arrow-right') }}
                        </span>
                    </a>
                </div>


            {% elseif buttonStyle =='theme_6' %}
                {{ attach_library('infobuilders/aos') }}

                <div class="m-button-wrapper content-position-{{ buttonPosition }}">
                    <a href="{{ buttonURL }}" class="m-button  m-button--secondary" target="{{ content.link_target }}"
                       data-aos="flip-right"
                       data-aos-easing="ease-out-cubic"
                       data-aos-duration="1000">
                        {% if buttonTitle %}
                            {{ buttonTitle }}
                        {% endif %}
                    </a>
                </div>
            {% elseif buttonStyle =='theme_7' %}
                {{ attach_library('infobuilders/aos') }}

                <div class="m-button-wrapper content-position-{{ buttonPosition }}">
                    <a href="{{ buttonURL }}" class="m-button" target="{{ content.link_target }}"
                       data-aos="flip-right"
                       data-aos-easing="ease-out-cubic"
                       data-aos-duration="1000">
                        {% if buttonTitle %}
                            {{ buttonTitle }}
                        {% endif %}
                    </a>
                </div>
            {% else %}

                <div class="m-button-wrapper content-position-{{ buttonPosition }}">
                    <a href="{{ buttonURL }}" class="m-button {% if buttonStyle %} m-button--{{ get_button_style
                        (buttonStyle) }} {% endif %}" target="{{ content.link_target }}">
                        {% if buttonTitle %}
                            {{ buttonTitle }}
                        {% endif %}
                    </a>
                </div>

            {% endif %}
        {% endif %}

    {% endblock %}
{% endblock paragraph %}